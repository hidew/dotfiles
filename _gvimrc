"カラーテーマ
colorscheme desert
"ウィンドウのサイズを記憶する
let g:save_window_file = expand('~/.vimwinpos')
augroup SaveWindow
  autocmd!
  autocmd VimLeavePre * call s:save_window()
  function! s:save_window()
    let options = [
      \ 'set columns=' . &columns,
      \ 'set lines=' . &lines,
      \ 'winpos ' . getwinposx() . ' ' . getwinposy(),
      \ ]
    call writefile(options, g:save_window_file)
  endfunction
augroup END
if filereadable(g:save_window_file)
  execute 'source' g:save_window_file
endif

"ウィンドウを最大化して起動
"au GUIEnter * simalt ~x
"不可視文字を表示
"set list
"タブエディタ
set showtabline=2
"フォントサイズ
"if has('win32')
"  set guifont=Osaka−等幅:h11:cSHIFTJIS
"endif
set guifont=Ricty:h10:cSHIFTJIS
"set guifont=MS_Gothic:h10:cSHIFTJIS
"行間隔の設定
set linespace=1
"タブにファイル名だけを表示する
function! GuiTabLabel()
" タブで表示する文字列の初期化をします
       let l:label=''
   
" タブに含まれるバッファ(ウィンドウ)についての情報をとっておきます。
    let l:bufnrlist = tabpagebuflist(v:lnum)
" 表示文字列にバッファ名を追加します
" パスを全部表示させると長いのでファイル名だけを使います
    let l:bufname = fnamemodify(bufname(l:bufnrlist[tabpagewinnr(v:lnum) - 1]), ':t')

    let l:label=l:bufname==''?'No title' : l:bufname

     let l:wincount = tabpagewinnr(v:lnum, '$')
  if l:wincount > 1
    let l:label .= '[' . l:wincount . ']'
endif

  " このタブページに変更のあるバッファがるときには '[+]' を追加します(デフォルトで一応あるので)
  for bufnr in l:bufnrlist
    if getbufvar(bufnr, "&modified")
      let l:label .= '[+]'
      break
    endif
  endfor

  " 表示文字列を返します
  return l:label
endfunction

" guitablabel に上の関数を設定します
" その表示の前に %N というところでタブ番号を表示させています
set guitablabel=%N:\ %{GuiTabLabel()}
"途中でenterした時勝手に保管しない
"
"if pumvisible()
"         " a command to restore to original text and select the first match
"        return "\<C-p>\<Down>\<C-p>"
"     elseif a:nRetry > 0
"         " In case of dividing words by symbols while popup menu is visible,
"         " popup is not available unless input <C-e> (e.g. 'for(int', 'a==b')
"
set tw=0

